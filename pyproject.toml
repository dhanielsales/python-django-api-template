[project]

dependencies = [
  "django>=5.2.2",
  "django-stubs-ext>=5.2.1",
  "django-stubs[compatible-mypy]>=5.1.0",
  "djangorestframework>=3.16.0",
  "pydantic>=2.11.7",
  "pytest>=8.4.1",
]
description = "Add your description here"
name = "python-django-api-template"
readme = "README.md"
requires-python = ">=3.13"
version = "0.1.0"

[dependency-groups]
dev = [
  "mypy>=1.16.0",
  "pytest-django>=4.11.1",
  "ruff>=0.11.13",
  "types-python-dateutil>=2.9.0.20250708",
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "src.django.config.test_settings"
addopts = "--reuse-db"
python_classes = ["Test*"]
python_files = ["tests.py", "test_*.py", "*_test.py"]
python_functions = ["test_*"]

[tool.ruff.lint.per-file-ignores]
"**/migrations/*.py" = ["F403", "D101"]
"src/django/config/test_settings.py" = ["F403", "D101"]
# Test files - ignore common test-related rules
"**/*_test.py" = [
  "D101", # Missing docstring in public class
  "D102", # Missing docstring in public method  
  "D103", # Missing docstring in public function
  "S101", # Use of assert detected
  "PLR2004", # Magic value used in comparison
]

[tool.ruff]
fix = true
ignore = ["D100"]
line-length = 90
select = [
  "E", # pycodestyle errors
  "F", # pyflakes
  "I", # isort
  "D", # pydocstyle
  "ANN", # flake8-annotations (type hints)
  "B", # flake8-bugbear
  "UP", # pyupgrade
  "S", # flake8-bandit
]
src = ["src"]
target-version = "py313"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint]
# Require type annotations for all functions and methods
extend-select = ["ANN"]
# Make missing type annotations an error

[tool.ruff.lint.flake8-annotations]
# allow-star-arg-any = false # Test with this in future
allow-star-arg-any = false
mypy-init-return = true
suppress-dummy-args = false

[tool.mypy]
disallow_incomplete_defs = true
disallow_untyped_defs = true
files = ["src"]
plugins = ["mypy_django_plugin.main"]
python_version = "3.13"
strict = true

[[tool.mypy.overrides]]
ignore_errors = true
module = "*.migrations.*"

[tool.django-stubs]
django_settings_module = "src.django.config.settings"

[[tool.mypy.overrides]]
ignore_errors = true
module = [
  "__project__.*",
]
